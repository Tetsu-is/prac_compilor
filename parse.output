Terminals which are not used

   lex_KW_INT
   lex_KW_CHAR
   lex_KW_IF
   lex_KW_ELSE
   lex_KW_WHILE
   lex_KW_RETURN
   lex_AND
   lex_EQ
   lex_SEMICOLON
   lex_LBRACE
   lex_RBRACE
   lex_LBRACK
   lex_RBRACK


Grammar

    0 $accept: program $end

    1 program: expression

    2 expression4: lex_INT
    3            | lex_CHAR
    4            | exp_variable
    5            | lex_LPAREN expression lex_RPAREN
    6            | exp_function

    7 exp_function: lex_ID lex_LPAREN explist lex_RPAREN

    8 explist: /* empty */
    9        | expression
   10        | explist lex_COMMA expression

   11 exp_variable: lex_ID

   12 expression3: expression4
   13            | expression3 lex_STAR expression4
   14            | expression3 lex_SLASH expression4
   15            | expression3 lex_PERCENT expression4

   16 expression2: expression3
   17            | lex_PLUS expression3
   18            | lex_MINUS expression3
   19            | expression2 lex_PLUS expression3
   20            | expression2 lex_MINUS expression3

   21 expression: expression2
   22           | expression lex_LT expression2
   23           | expression lex_GT expression2
   24           | expression lex_LE expression2
   25           | expression lex_GE expression2
   26           | expression lex_EQEQ expression2
   27           | expression lex_NE expression2


Terminals, with rules where they appear

$end (0) 0
error (256)
lex_KW_INT (258)
lex_KW_CHAR (259)
lex_KW_IF (260)
lex_KW_ELSE (261)
lex_KW_WHILE (262)
lex_KW_RETURN (263)
lex_PLUS (264) 17 19
lex_MINUS (265) 18 20
lex_STAR (266) 13
lex_SLASH (267) 14
lex_PERCENT (268) 15
lex_AND (269)
lex_EQ (270)
lex_EQEQ (271) 26
lex_NE (272) 27
lex_LT (273) 22
lex_GT (274) 23
lex_LE (275) 24
lex_GE (276) 25
lex_COMMA (277) 10
lex_SEMICOLON (278)
lex_LPAREN (279) 5 7
lex_RPAREN (280) 5 7
lex_LBRACE (281)
lex_RBRACE (282)
lex_LBRACK (283)
lex_RBRACK (284)
lex_INT (285) 2
lex_CHAR (286) 3
lex_ID (287) 7 11


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
expression4 (35)
    on left: 2 3 4 5 6, on right: 12 13 14 15
exp_function (36)
    on left: 7, on right: 6
explist (37)
    on left: 8 9 10, on right: 7 10
exp_variable (38)
    on left: 11, on right: 4
expression3 (39)
    on left: 12 13 14 15, on right: 13 14 15 16 17 18 19 20
expression2 (40)
    on left: 16 17 18 19 20, on right: 19 20 21 22 23 24 25 26 27
expression (41)
    on left: 21 22 23 24 25 26 27, on right: 1 5 9 10 22 23 24 25 26
    27


state 0

    0 $accept: . program $end

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    program       go to state 7
    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 12
    expression    go to state 13


state 1

   17 expression2: lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 14


state 2

   18 expression2: lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 15


state 3

    5 expression4: lex_LPAREN . expression lex_RPAREN

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 12
    expression    go to state 16


state 4

    2 expression4: lex_INT .

    $default  reduce using rule 2 (expression4)


state 5

    3 expression4: lex_CHAR .

    $default  reduce using rule 3 (expression4)


state 6

    7 exp_function: lex_ID . lex_LPAREN explist lex_RPAREN
   11 exp_variable: lex_ID .

    lex_LPAREN  shift, and go to state 17

    $default  reduce using rule 11 (exp_variable)


state 7

    0 $accept: program . $end

    $end  shift, and go to state 18


state 8

   12 expression3: expression4 .

    $default  reduce using rule 12 (expression3)


state 9

    6 expression4: exp_function .

    $default  reduce using rule 6 (expression4)


state 10

    4 expression4: exp_variable .

    $default  reduce using rule 4 (expression4)


state 11

   13 expression3: expression3 . lex_STAR expression4
   14            | expression3 . lex_SLASH expression4
   15            | expression3 . lex_PERCENT expression4
   16 expression2: expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 16 (expression2)


state 12

   19 expression2: expression2 . lex_PLUS expression3
   20            | expression2 . lex_MINUS expression3
   21 expression: expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 21 (expression)


state 13

    1 program: expression .
   22 expression: expression . lex_LT expression2
   23           | expression . lex_GT expression2
   24           | expression . lex_LE expression2
   25           | expression . lex_GE expression2
   26           | expression . lex_EQEQ expression2
   27           | expression . lex_NE expression2

    lex_EQEQ  shift, and go to state 24
    lex_NE    shift, and go to state 25
    lex_LT    shift, and go to state 26
    lex_GT    shift, and go to state 27
    lex_LE    shift, and go to state 28
    lex_GE    shift, and go to state 29

    $default  reduce using rule 1 (program)


state 14

   13 expression3: expression3 . lex_STAR expression4
   14            | expression3 . lex_SLASH expression4
   15            | expression3 . lex_PERCENT expression4
   17 expression2: lex_PLUS expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 17 (expression2)


state 15

   13 expression3: expression3 . lex_STAR expression4
   14            | expression3 . lex_SLASH expression4
   15            | expression3 . lex_PERCENT expression4
   18 expression2: lex_MINUS expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 18 (expression2)


state 16

    5 expression4: lex_LPAREN expression . lex_RPAREN
   22 expression: expression . lex_LT expression2
   23           | expression . lex_GT expression2
   24           | expression . lex_LE expression2
   25           | expression . lex_GE expression2
   26           | expression . lex_EQEQ expression2
   27           | expression . lex_NE expression2

    lex_EQEQ    shift, and go to state 24
    lex_NE      shift, and go to state 25
    lex_LT      shift, and go to state 26
    lex_GT      shift, and go to state 27
    lex_LE      shift, and go to state 28
    lex_GE      shift, and go to state 29
    lex_RPAREN  shift, and go to state 30


state 17

    7 exp_function: lex_ID lex_LPAREN . explist lex_RPAREN

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    $default  reduce using rule 8 (explist)

    expression4   go to state 8
    exp_function  go to state 9
    explist       go to state 31
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 12
    expression    go to state 32


state 18

    0 $accept: program $end .

    $default  accept


state 19

   13 expression3: expression3 lex_STAR . expression4

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 33
    exp_function  go to state 9
    exp_variable  go to state 10


state 20

   14 expression3: expression3 lex_SLASH . expression4

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 34
    exp_function  go to state 9
    exp_variable  go to state 10


state 21

   15 expression3: expression3 lex_PERCENT . expression4

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 35
    exp_function  go to state 9
    exp_variable  go to state 10


state 22

   19 expression2: expression2 lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 36


state 23

   20 expression2: expression2 lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 37


state 24

   26 expression: expression lex_EQEQ . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 38


state 25

   27 expression: expression lex_NE . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 39


state 26

   22 expression: expression lex_LT . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 40


state 27

   23 expression: expression lex_GT . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 41


state 28

   24 expression: expression lex_LE . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 42


state 29

   25 expression: expression lex_GE . expression2

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 43


state 30

    5 expression4: lex_LPAREN expression lex_RPAREN .

    $default  reduce using rule 5 (expression4)


state 31

    7 exp_function: lex_ID lex_LPAREN explist . lex_RPAREN
   10 explist: explist . lex_COMMA expression

    lex_COMMA   shift, and go to state 44
    lex_RPAREN  shift, and go to state 45


state 32

    9 explist: expression .
   22 expression: expression . lex_LT expression2
   23           | expression . lex_GT expression2
   24           | expression . lex_LE expression2
   25           | expression . lex_GE expression2
   26           | expression . lex_EQEQ expression2
   27           | expression . lex_NE expression2

    lex_EQEQ  shift, and go to state 24
    lex_NE    shift, and go to state 25
    lex_LT    shift, and go to state 26
    lex_GT    shift, and go to state 27
    lex_LE    shift, and go to state 28
    lex_GE    shift, and go to state 29

    $default  reduce using rule 9 (explist)


state 33

   13 expression3: expression3 lex_STAR expression4 .

    $default  reduce using rule 13 (expression3)


state 34

   14 expression3: expression3 lex_SLASH expression4 .

    $default  reduce using rule 14 (expression3)


state 35

   15 expression3: expression3 lex_PERCENT expression4 .

    $default  reduce using rule 15 (expression3)


state 36

   13 expression3: expression3 . lex_STAR expression4
   14            | expression3 . lex_SLASH expression4
   15            | expression3 . lex_PERCENT expression4
   19 expression2: expression2 lex_PLUS expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 19 (expression2)


state 37

   13 expression3: expression3 . lex_STAR expression4
   14            | expression3 . lex_SLASH expression4
   15            | expression3 . lex_PERCENT expression4
   20 expression2: expression2 lex_MINUS expression3 .

    lex_STAR     shift, and go to state 19
    lex_SLASH    shift, and go to state 20
    lex_PERCENT  shift, and go to state 21

    $default  reduce using rule 20 (expression2)


state 38

   19 expression2: expression2 . lex_PLUS expression3
   20            | expression2 . lex_MINUS expression3
   26 expression: expression lex_EQEQ expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 26 (expression)


state 39

   19 expression2: expression2 . lex_PLUS expression3
   20            | expression2 . lex_MINUS expression3
   27 expression: expression lex_NE expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 27 (expression)


state 40

   19 expression2: expression2 . lex_PLUS expression3
   20            | expression2 . lex_MINUS expression3
   22 expression: expression lex_LT expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 22 (expression)


state 41

   19 expression2: expression2 . lex_PLUS expression3
   20            | expression2 . lex_MINUS expression3
   23 expression: expression lex_GT expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 23 (expression)


state 42

   19 expression2: expression2 . lex_PLUS expression3
   20            | expression2 . lex_MINUS expression3
   24 expression: expression lex_LE expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 24 (expression)


state 43

   19 expression2: expression2 . lex_PLUS expression3
   20            | expression2 . lex_MINUS expression3
   25 expression: expression lex_GE expression2 .

    lex_PLUS   shift, and go to state 22
    lex_MINUS  shift, and go to state 23

    $default  reduce using rule 25 (expression)


state 44

   10 explist: explist lex_COMMA . expression

    lex_PLUS    shift, and go to state 1
    lex_MINUS   shift, and go to state 2
    lex_LPAREN  shift, and go to state 3
    lex_INT     shift, and go to state 4
    lex_CHAR    shift, and go to state 5
    lex_ID      shift, and go to state 6

    expression4   go to state 8
    exp_function  go to state 9
    exp_variable  go to state 10
    expression3   go to state 11
    expression2   go to state 12
    expression    go to state 46


state 45

    7 exp_function: lex_ID lex_LPAREN explist lex_RPAREN .

    $default  reduce using rule 7 (exp_function)


state 46

   10 explist: explist lex_COMMA expression .
   22 expression: expression . lex_LT expression2
   23           | expression . lex_GT expression2
   24           | expression . lex_LE expression2
   25           | expression . lex_GE expression2
   26           | expression . lex_EQEQ expression2
   27           | expression . lex_NE expression2

    lex_EQEQ  shift, and go to state 24
    lex_NE    shift, and go to state 25
    lex_LT    shift, and go to state 26
    lex_GT    shift, and go to state 27
    lex_LE    shift, and go to state 28
    lex_GE    shift, and go to state 29

    $default  reduce using rule 10 (explist)
