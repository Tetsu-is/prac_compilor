Terminals which are not used

   lex_AND
   lex_LBRACK
   lex_RBRACK


State 92 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function_dcl

    2 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE

    3 argument_dcllist: /* empty */
    4                 | variable_dcl
    5                 | argument_dcllist lex_COMMA variable_dcl

    6 variable_dcllist: /* empty */
    7                 | variable_dcllist variable_dcl lex_SEMICOLON

    8 variable_dcl: type lex_ID

    9 type: lex_KW_INT
   10     | lex_KW_CHAR

   11 statement: st_assign
   12          | lex_LBRACE st_list lex_RBRACE
   13          | st_if
   14          | st_while
   15          | st_return
   16          | st_function

   17 st_assign: exp_variable lex_EQ expression lex_SEMICOLON

   18 st_list: stlist

   19 stlist: /* empty */
   20       | stlist statement

   21 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN statement
   22      | lex_KW_IF lex_LPAREN expression lex_RPAREN statement lex_KW_ELSE statement

   23 st_while: lex_KW_WHILE lex_LPAREN expression lex_RPAREN statement

   24 st_return: lex_KW_RETURN expression lex_SEMICOLON

   25 st_function: lex_ID lex_LPAREN explist lex_RPAREN lex_SEMICOLON

   26 expression4: lex_INT
   27            | lex_CHAR
   28            | exp_variable
   29            | lex_LPAREN expression lex_RPAREN
   30            | exp_function

   31 exp_function: lex_ID lex_LPAREN explist lex_RPAREN

   32 explist: /* empty */
   33        | expression
   34        | explist lex_COMMA expression

   35 exp_variable: lex_ID

   36 expression3: expression4
   37            | expression3 lex_STAR expression4
   38            | expression3 lex_SLASH expression4
   39            | expression3 lex_PERCENT expression4

   40 expression2: expression3
   41            | lex_PLUS expression3
   42            | lex_MINUS expression3
   43            | expression2 lex_PLUS expression3
   44            | expression2 lex_MINUS expression3

   45 expression: expression2
   46           | expression lex_LT expression2
   47           | expression lex_GT expression2
   48           | expression lex_LE expression2
   49           | expression lex_GE expression2
   50           | expression lex_EQEQ expression2
   51           | expression lex_NE expression2


Terminals, with rules where they appear

$end (0) 0
error (256)
lex_KW_INT (258) 9
lex_KW_CHAR (259) 10
lex_KW_IF (260) 21 22
lex_KW_ELSE (261) 22
lex_KW_WHILE (262) 23
lex_KW_RETURN (263) 24
lex_PLUS (264) 41 43
lex_MINUS (265) 42 44
lex_STAR (266) 37
lex_SLASH (267) 38
lex_PERCENT (268) 39
lex_AND (269)
lex_EQ (270) 17
lex_EQEQ (271) 50
lex_NE (272) 51
lex_LT (273) 46
lex_GT (274) 47
lex_LE (275) 48
lex_GE (276) 49
lex_COMMA (277) 5 34
lex_SEMICOLON (278) 7 17 24 25
lex_LPAREN (279) 2 21 22 23 25 29 31
lex_RPAREN (280) 2 21 22 23 25 29 31
lex_LBRACE (281) 2 12
lex_RBRACE (282) 2 12
lex_LBRACK (283)
lex_RBRACK (284)
lex_INT (285) 26
lex_CHAR (286) 27
lex_ID (287) 2 8 25 31 35


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
function_dcl (35)
    on left: 2, on right: 1
argument_dcllist (36)
    on left: 3 4 5, on right: 2 5
variable_dcllist (37)
    on left: 6 7, on right: 2 7
variable_dcl (38)
    on left: 8, on right: 4 5 7
type (39)
    on left: 9 10, on right: 2 8
statement (40)
    on left: 11 12 13 14 15 16, on right: 20 21 22 23
st_assign (41)
    on left: 17, on right: 11
st_list (42)
    on left: 18, on right: 2 12
stlist (43)
    on left: 19 20, on right: 18 20
st_if (44)
    on left: 21 22, on right: 13
st_while (45)
    on left: 23, on right: 14
st_return (46)
    on left: 24, on right: 15
st_function (47)
    on left: 25, on right: 16
expression4 (48)
    on left: 26 27 28 29 30, on right: 36 37 38 39
exp_function (49)
    on left: 31, on right: 30
explist (50)
    on left: 32 33 34, on right: 25 31 34
exp_variable (51)
    on left: 35, on right: 17 28
expression3 (52)
    on left: 36 37 38 39, on right: 37 38 39 40 41 42 43 44
expression2 (53)
    on left: 40 41 42 43 44, on right: 43 44 45 46 47 48 49 50 51
expression (54)
    on left: 45 46 47 48 49 50 51, on right: 17 21 22 23 24 29 33 34
    46 47 48 49 50 51


state 0

    0 $accept: . program $end

    lex_KW_INT   shift, and go to state 1
    lex_KW_CHAR  shift, and go to state 2

    program       go to state 3
    function_dcl  go to state 4
    type          go to state 5


state 1

    9 type: lex_KW_INT .

    $default  reduce using rule 9 (type)


state 2

   10 type: lex_KW_CHAR .

    $default  reduce using rule 10 (type)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 6


state 4

    1 program: function_dcl .

    $default  reduce using rule 1 (program)


state 5

    2 function_dcl: type . lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE

    lex_ID  shift, and go to state 7


state 6

    0 $accept: program $end .

    $default  accept


state 7

    2 function_dcl: type lex_ID . lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE

    lex_LPAREN  shift, and go to state 8


state 8

    2 function_dcl: type lex_ID lex_LPAREN . argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE

    lex_KW_INT   shift, and go to state 1
    lex_KW_CHAR  shift, and go to state 2

    $default  reduce using rule 3 (argument_dcllist)

    argument_dcllist  go to state 9
    variable_dcl      go to state 10
    type              go to state 11


state 9

    2 function_dcl: type lex_ID lex_LPAREN argument_dcllist . lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE
    5 argument_dcllist: argument_dcllist . lex_COMMA variable_dcl

    lex_COMMA   shift, and go to state 12
    lex_RPAREN  shift, and go to state 13


state 10

    4 argument_dcllist: variable_dcl .

    $default  reduce using rule 4 (argument_dcllist)


state 11

    8 variable_dcl: type . lex_ID

    lex_ID  shift, and go to state 14


state 12

    5 argument_dcllist: argument_dcllist lex_COMMA . variable_dcl

    lex_KW_INT   shift, and go to state 1
    lex_KW_CHAR  shift, and go to state 2

    variable_dcl  go to state 15
    type          go to state 11


state 13

    2 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN . lex_LBRACE variable_dcllist st_list lex_RBRACE

    lex_LBRACE  shift, and go to state 16


state 14

    8 variable_dcl: type lex_ID .

    $default  reduce using rule 8 (variable_dcl)


state 15

    5 argument_dcllist: argument_dcllist lex_COMMA variable_dcl .

    $default  reduce using rule 5 (argument_dcllist)


state 16

    2 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE . variable_dcllist st_list lex_RBRACE

    $default  reduce using rule 6 (variable_dcllist)

    variable_dcllist  go to state 17


state 17

    2 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist . st_list lex_RBRACE
    7 variable_dcllist: variable_dcllist . variable_dcl lex_SEMICOLON

    lex_KW_INT   shift, and go to state 1
    lex_KW_CHAR  shift, and go to state 2

    $default  reduce using rule 19 (stlist)

    variable_dcl  go to state 18
    type          go to state 11
    st_list       go to state 19
    stlist        go to state 20


state 18

    7 variable_dcllist: variable_dcllist variable_dcl . lex_SEMICOLON

    lex_SEMICOLON  shift, and go to state 21


state 19

    2 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list . lex_RBRACE

    lex_RBRACE  shift, and go to state 22


state 20

   18 st_list: stlist .
   20 stlist: stlist . statement

    lex_KW_IF      shift, and go to state 23
    lex_KW_WHILE   shift, and go to state 24
    lex_KW_RETURN  shift, and go to state 25
    lex_LBRACE     shift, and go to state 26
    lex_ID         shift, and go to state 27

    $default  reduce using rule 18 (st_list)

    statement     go to state 28
    st_assign     go to state 29
    st_if         go to state 30
    st_while      go to state 31
    st_return     go to state 32
    st_function   go to state 33
    exp_variable  go to state 34


state 21

    7 variable_dcllist: variable_dcllist variable_dcl lex_SEMICOLON .

    $default  reduce using rule 7 (variable_dcllist)


state 22

    2 function_dcl: type lex_ID lex_LPAREN argument_dcllist lex_RPAREN lex_LBRACE variable_dcllist st_list lex_RBRACE .

    $default  reduce using rule 2 (function_dcl)


state 23

   21 st_if: lex_KW_IF . lex_LPAREN expression lex_RPAREN statement
   22      | lex_KW_IF . lex_LPAREN expression lex_RPAREN statement lex_KW_ELSE statement

    lex_LPAREN  shift, and go to state 35


state 24

   23 st_while: lex_KW_WHILE . lex_LPAREN expression lex_RPAREN statement

    lex_LPAREN  shift, and go to state 36


state 25

   24 st_return: lex_KW_RETURN . expression lex_SEMICOLON

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 47
    expression    go to state 48


state 26

   12 statement: lex_LBRACE . st_list lex_RBRACE

    $default  reduce using rule 19 (stlist)

    st_list  go to state 49
    stlist   go to state 20


state 27

   25 st_function: lex_ID . lex_LPAREN explist lex_RPAREN lex_SEMICOLON
   35 exp_variable: lex_ID .

    lex_LPAREN  shift, and go to state 50

    $default  reduce using rule 35 (exp_variable)


state 28

   20 stlist: stlist statement .

    $default  reduce using rule 20 (stlist)


state 29

   11 statement: st_assign .

    $default  reduce using rule 11 (statement)


state 30

   13 statement: st_if .

    $default  reduce using rule 13 (statement)


state 31

   14 statement: st_while .

    $default  reduce using rule 14 (statement)


state 32

   15 statement: st_return .

    $default  reduce using rule 15 (statement)


state 33

   16 statement: st_function .

    $default  reduce using rule 16 (statement)


state 34

   17 st_assign: exp_variable . lex_EQ expression lex_SEMICOLON

    lex_EQ  shift, and go to state 51


state 35

   21 st_if: lex_KW_IF lex_LPAREN . expression lex_RPAREN statement
   22      | lex_KW_IF lex_LPAREN . expression lex_RPAREN statement lex_KW_ELSE statement

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 47
    expression    go to state 52


state 36

   23 st_while: lex_KW_WHILE lex_LPAREN . expression lex_RPAREN statement

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 47
    expression    go to state 53


state 37

   41 expression2: lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 54


state 38

   42 expression2: lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 55


state 39

   29 expression4: lex_LPAREN . expression lex_RPAREN

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 47
    expression    go to state 56


state 40

   26 expression4: lex_INT .

    $default  reduce using rule 26 (expression4)


state 41

   27 expression4: lex_CHAR .

    $default  reduce using rule 27 (expression4)


state 42

   31 exp_function: lex_ID . lex_LPAREN explist lex_RPAREN
   35 exp_variable: lex_ID .

    lex_LPAREN  shift, and go to state 57

    $default  reduce using rule 35 (exp_variable)


state 43

   36 expression3: expression4 .

    $default  reduce using rule 36 (expression3)


state 44

   30 expression4: exp_function .

    $default  reduce using rule 30 (expression4)


state 45

   28 expression4: exp_variable .

    $default  reduce using rule 28 (expression4)


state 46

   37 expression3: expression3 . lex_STAR expression4
   38            | expression3 . lex_SLASH expression4
   39            | expression3 . lex_PERCENT expression4
   40 expression2: expression3 .

    lex_STAR     shift, and go to state 58
    lex_SLASH    shift, and go to state 59
    lex_PERCENT  shift, and go to state 60

    $default  reduce using rule 40 (expression2)


state 47

   43 expression2: expression2 . lex_PLUS expression3
   44            | expression2 . lex_MINUS expression3
   45 expression: expression2 .

    lex_PLUS   shift, and go to state 61
    lex_MINUS  shift, and go to state 62

    $default  reduce using rule 45 (expression)


state 48

   24 st_return: lex_KW_RETURN expression . lex_SEMICOLON
   46 expression: expression . lex_LT expression2
   47           | expression . lex_GT expression2
   48           | expression . lex_LE expression2
   49           | expression . lex_GE expression2
   50           | expression . lex_EQEQ expression2
   51           | expression . lex_NE expression2

    lex_EQEQ       shift, and go to state 63
    lex_NE         shift, and go to state 64
    lex_LT         shift, and go to state 65
    lex_GT         shift, and go to state 66
    lex_LE         shift, and go to state 67
    lex_GE         shift, and go to state 68
    lex_SEMICOLON  shift, and go to state 69


state 49

   12 statement: lex_LBRACE st_list . lex_RBRACE

    lex_RBRACE  shift, and go to state 70


state 50

   25 st_function: lex_ID lex_LPAREN . explist lex_RPAREN lex_SEMICOLON

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    $default  reduce using rule 32 (explist)

    expression4   go to state 43
    exp_function  go to state 44
    explist       go to state 71
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 47
    expression    go to state 72


state 51

   17 st_assign: exp_variable lex_EQ . expression lex_SEMICOLON

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 47
    expression    go to state 73


state 52

   21 st_if: lex_KW_IF lex_LPAREN expression . lex_RPAREN statement
   22      | lex_KW_IF lex_LPAREN expression . lex_RPAREN statement lex_KW_ELSE statement
   46 expression: expression . lex_LT expression2
   47           | expression . lex_GT expression2
   48           | expression . lex_LE expression2
   49           | expression . lex_GE expression2
   50           | expression . lex_EQEQ expression2
   51           | expression . lex_NE expression2

    lex_EQEQ    shift, and go to state 63
    lex_NE      shift, and go to state 64
    lex_LT      shift, and go to state 65
    lex_GT      shift, and go to state 66
    lex_LE      shift, and go to state 67
    lex_GE      shift, and go to state 68
    lex_RPAREN  shift, and go to state 74


state 53

   23 st_while: lex_KW_WHILE lex_LPAREN expression . lex_RPAREN statement
   46 expression: expression . lex_LT expression2
   47           | expression . lex_GT expression2
   48           | expression . lex_LE expression2
   49           | expression . lex_GE expression2
   50           | expression . lex_EQEQ expression2
   51           | expression . lex_NE expression2

    lex_EQEQ    shift, and go to state 63
    lex_NE      shift, and go to state 64
    lex_LT      shift, and go to state 65
    lex_GT      shift, and go to state 66
    lex_LE      shift, and go to state 67
    lex_GE      shift, and go to state 68
    lex_RPAREN  shift, and go to state 75


state 54

   37 expression3: expression3 . lex_STAR expression4
   38            | expression3 . lex_SLASH expression4
   39            | expression3 . lex_PERCENT expression4
   41 expression2: lex_PLUS expression3 .

    lex_STAR     shift, and go to state 58
    lex_SLASH    shift, and go to state 59
    lex_PERCENT  shift, and go to state 60

    $default  reduce using rule 41 (expression2)


state 55

   37 expression3: expression3 . lex_STAR expression4
   38            | expression3 . lex_SLASH expression4
   39            | expression3 . lex_PERCENT expression4
   42 expression2: lex_MINUS expression3 .

    lex_STAR     shift, and go to state 58
    lex_SLASH    shift, and go to state 59
    lex_PERCENT  shift, and go to state 60

    $default  reduce using rule 42 (expression2)


state 56

   29 expression4: lex_LPAREN expression . lex_RPAREN
   46 expression: expression . lex_LT expression2
   47           | expression . lex_GT expression2
   48           | expression . lex_LE expression2
   49           | expression . lex_GE expression2
   50           | expression . lex_EQEQ expression2
   51           | expression . lex_NE expression2

    lex_EQEQ    shift, and go to state 63
    lex_NE      shift, and go to state 64
    lex_LT      shift, and go to state 65
    lex_GT      shift, and go to state 66
    lex_LE      shift, and go to state 67
    lex_GE      shift, and go to state 68
    lex_RPAREN  shift, and go to state 76


state 57

   31 exp_function: lex_ID lex_LPAREN . explist lex_RPAREN

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    $default  reduce using rule 32 (explist)

    expression4   go to state 43
    exp_function  go to state 44
    explist       go to state 77
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 47
    expression    go to state 72


state 58

   37 expression3: expression3 lex_STAR . expression4

    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 78
    exp_function  go to state 44
    exp_variable  go to state 45


state 59

   38 expression3: expression3 lex_SLASH . expression4

    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 79
    exp_function  go to state 44
    exp_variable  go to state 45


state 60

   39 expression3: expression3 lex_PERCENT . expression4

    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 80
    exp_function  go to state 44
    exp_variable  go to state 45


state 61

   43 expression2: expression2 lex_PLUS . expression3

    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 81


state 62

   44 expression2: expression2 lex_MINUS . expression3

    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 82


state 63

   50 expression: expression lex_EQEQ . expression2

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 83


state 64

   51 expression: expression lex_NE . expression2

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 84


state 65

   46 expression: expression lex_LT . expression2

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 85


state 66

   47 expression: expression lex_GT . expression2

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 86


state 67

   48 expression: expression lex_LE . expression2

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 87


state 68

   49 expression: expression lex_GE . expression2

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 88


state 69

   24 st_return: lex_KW_RETURN expression lex_SEMICOLON .

    $default  reduce using rule 24 (st_return)


state 70

   12 statement: lex_LBRACE st_list lex_RBRACE .

    $default  reduce using rule 12 (statement)


state 71

   25 st_function: lex_ID lex_LPAREN explist . lex_RPAREN lex_SEMICOLON
   34 explist: explist . lex_COMMA expression

    lex_COMMA   shift, and go to state 89
    lex_RPAREN  shift, and go to state 90


state 72

   33 explist: expression .
   46 expression: expression . lex_LT expression2
   47           | expression . lex_GT expression2
   48           | expression . lex_LE expression2
   49           | expression . lex_GE expression2
   50           | expression . lex_EQEQ expression2
   51           | expression . lex_NE expression2

    lex_EQEQ  shift, and go to state 63
    lex_NE    shift, and go to state 64
    lex_LT    shift, and go to state 65
    lex_GT    shift, and go to state 66
    lex_LE    shift, and go to state 67
    lex_GE    shift, and go to state 68

    $default  reduce using rule 33 (explist)


state 73

   17 st_assign: exp_variable lex_EQ expression . lex_SEMICOLON
   46 expression: expression . lex_LT expression2
   47           | expression . lex_GT expression2
   48           | expression . lex_LE expression2
   49           | expression . lex_GE expression2
   50           | expression . lex_EQEQ expression2
   51           | expression . lex_NE expression2

    lex_EQEQ       shift, and go to state 63
    lex_NE         shift, and go to state 64
    lex_LT         shift, and go to state 65
    lex_GT         shift, and go to state 66
    lex_LE         shift, and go to state 67
    lex_GE         shift, and go to state 68
    lex_SEMICOLON  shift, and go to state 91


state 74

   21 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN . statement
   22      | lex_KW_IF lex_LPAREN expression lex_RPAREN . statement lex_KW_ELSE statement

    lex_KW_IF      shift, and go to state 23
    lex_KW_WHILE   shift, and go to state 24
    lex_KW_RETURN  shift, and go to state 25
    lex_LBRACE     shift, and go to state 26
    lex_ID         shift, and go to state 27

    statement     go to state 92
    st_assign     go to state 29
    st_if         go to state 30
    st_while      go to state 31
    st_return     go to state 32
    st_function   go to state 33
    exp_variable  go to state 34


state 75

   23 st_while: lex_KW_WHILE lex_LPAREN expression lex_RPAREN . statement

    lex_KW_IF      shift, and go to state 23
    lex_KW_WHILE   shift, and go to state 24
    lex_KW_RETURN  shift, and go to state 25
    lex_LBRACE     shift, and go to state 26
    lex_ID         shift, and go to state 27

    statement     go to state 93
    st_assign     go to state 29
    st_if         go to state 30
    st_while      go to state 31
    st_return     go to state 32
    st_function   go to state 33
    exp_variable  go to state 34


state 76

   29 expression4: lex_LPAREN expression lex_RPAREN .

    $default  reduce using rule 29 (expression4)


state 77

   31 exp_function: lex_ID lex_LPAREN explist . lex_RPAREN
   34 explist: explist . lex_COMMA expression

    lex_COMMA   shift, and go to state 89
    lex_RPAREN  shift, and go to state 94


state 78

   37 expression3: expression3 lex_STAR expression4 .

    $default  reduce using rule 37 (expression3)


state 79

   38 expression3: expression3 lex_SLASH expression4 .

    $default  reduce using rule 38 (expression3)


state 80

   39 expression3: expression3 lex_PERCENT expression4 .

    $default  reduce using rule 39 (expression3)


state 81

   37 expression3: expression3 . lex_STAR expression4
   38            | expression3 . lex_SLASH expression4
   39            | expression3 . lex_PERCENT expression4
   43 expression2: expression2 lex_PLUS expression3 .

    lex_STAR     shift, and go to state 58
    lex_SLASH    shift, and go to state 59
    lex_PERCENT  shift, and go to state 60

    $default  reduce using rule 43 (expression2)


state 82

   37 expression3: expression3 . lex_STAR expression4
   38            | expression3 . lex_SLASH expression4
   39            | expression3 . lex_PERCENT expression4
   44 expression2: expression2 lex_MINUS expression3 .

    lex_STAR     shift, and go to state 58
    lex_SLASH    shift, and go to state 59
    lex_PERCENT  shift, and go to state 60

    $default  reduce using rule 44 (expression2)


state 83

   43 expression2: expression2 . lex_PLUS expression3
   44            | expression2 . lex_MINUS expression3
   50 expression: expression lex_EQEQ expression2 .

    lex_PLUS   shift, and go to state 61
    lex_MINUS  shift, and go to state 62

    $default  reduce using rule 50 (expression)


state 84

   43 expression2: expression2 . lex_PLUS expression3
   44            | expression2 . lex_MINUS expression3
   51 expression: expression lex_NE expression2 .

    lex_PLUS   shift, and go to state 61
    lex_MINUS  shift, and go to state 62

    $default  reduce using rule 51 (expression)


state 85

   43 expression2: expression2 . lex_PLUS expression3
   44            | expression2 . lex_MINUS expression3
   46 expression: expression lex_LT expression2 .

    lex_PLUS   shift, and go to state 61
    lex_MINUS  shift, and go to state 62

    $default  reduce using rule 46 (expression)


state 86

   43 expression2: expression2 . lex_PLUS expression3
   44            | expression2 . lex_MINUS expression3
   47 expression: expression lex_GT expression2 .

    lex_PLUS   shift, and go to state 61
    lex_MINUS  shift, and go to state 62

    $default  reduce using rule 47 (expression)


state 87

   43 expression2: expression2 . lex_PLUS expression3
   44            | expression2 . lex_MINUS expression3
   48 expression: expression lex_LE expression2 .

    lex_PLUS   shift, and go to state 61
    lex_MINUS  shift, and go to state 62

    $default  reduce using rule 48 (expression)


state 88

   43 expression2: expression2 . lex_PLUS expression3
   44            | expression2 . lex_MINUS expression3
   49 expression: expression lex_GE expression2 .

    lex_PLUS   shift, and go to state 61
    lex_MINUS  shift, and go to state 62

    $default  reduce using rule 49 (expression)


state 89

   34 explist: explist lex_COMMA . expression

    lex_PLUS    shift, and go to state 37
    lex_MINUS   shift, and go to state 38
    lex_LPAREN  shift, and go to state 39
    lex_INT     shift, and go to state 40
    lex_CHAR    shift, and go to state 41
    lex_ID      shift, and go to state 42

    expression4   go to state 43
    exp_function  go to state 44
    exp_variable  go to state 45
    expression3   go to state 46
    expression2   go to state 47
    expression    go to state 95


state 90

   25 st_function: lex_ID lex_LPAREN explist lex_RPAREN . lex_SEMICOLON

    lex_SEMICOLON  shift, and go to state 96


state 91

   17 st_assign: exp_variable lex_EQ expression lex_SEMICOLON .

    $default  reduce using rule 17 (st_assign)


state 92

   21 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN statement .
   22      | lex_KW_IF lex_LPAREN expression lex_RPAREN statement . lex_KW_ELSE statement

    lex_KW_ELSE  shift, and go to state 97

    lex_KW_ELSE  [reduce using rule 21 (st_if)]
    $default     reduce using rule 21 (st_if)


state 93

   23 st_while: lex_KW_WHILE lex_LPAREN expression lex_RPAREN statement .

    $default  reduce using rule 23 (st_while)


state 94

   31 exp_function: lex_ID lex_LPAREN explist lex_RPAREN .

    $default  reduce using rule 31 (exp_function)


state 95

   34 explist: explist lex_COMMA expression .
   46 expression: expression . lex_LT expression2
   47           | expression . lex_GT expression2
   48           | expression . lex_LE expression2
   49           | expression . lex_GE expression2
   50           | expression . lex_EQEQ expression2
   51           | expression . lex_NE expression2

    lex_EQEQ  shift, and go to state 63
    lex_NE    shift, and go to state 64
    lex_LT    shift, and go to state 65
    lex_GT    shift, and go to state 66
    lex_LE    shift, and go to state 67
    lex_GE    shift, and go to state 68

    $default  reduce using rule 34 (explist)


state 96

   25 st_function: lex_ID lex_LPAREN explist lex_RPAREN lex_SEMICOLON .

    $default  reduce using rule 25 (st_function)


state 97

   22 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN statement lex_KW_ELSE . statement

    lex_KW_IF      shift, and go to state 23
    lex_KW_WHILE   shift, and go to state 24
    lex_KW_RETURN  shift, and go to state 25
    lex_LBRACE     shift, and go to state 26
    lex_ID         shift, and go to state 27

    statement     go to state 98
    st_assign     go to state 29
    st_if         go to state 30
    st_while      go to state 31
    st_return     go to state 32
    st_function   go to state 33
    exp_variable  go to state 34


state 98

   22 st_if: lex_KW_IF lex_LPAREN expression lex_RPAREN statement lex_KW_ELSE statement .

    $default  reduce using rule 22 (st_if)
