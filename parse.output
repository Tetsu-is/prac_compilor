Terminals which are not used

   lex_KW_INT
   lex_KW_CHAR
   lex_KW_IF
   lex_KW_ELSE
   lex_KW_WHILE
   lex_KW_RETURN
   lex_AND
   lex_EQ
   lex_COMMA
   lex_SEMICOLON
   lex_LPAREN
   lex_RPAREN
   lex_LBRACE
   lex_RBRACE
   lex_LBRACK
   lex_RBRACK


Grammar

    0 $accept: program $end

    1 program: expression

    2 expression4: lex_INT
    3            | lex_CHAR
    4            | exp_variable

    5 exp_variable: lex_ID

    6 expression3: expression4
    7            | expression3 lex_STAR expression4
    8            | expression3 lex_SLASH expression4
    9            | expression3 lex_PERCENT expression4

   10 expression2: expression3
   11            | lex_PLUS expression3
   12            | lex_MINUS expression3
   13            | expression2 lex_PLUS expression3
   14            | expression2 lex_MINUS expression3

   15 expression: expression2
   16           | expression lex_LT expression2
   17           | expression lex_GT expression2
   18           | expression lex_LE expression2
   19           | expression lex_GE expression2
   20           | expression lex_EQEQ expression2
   21           | expression lex_NE expression2


Terminals, with rules where they appear

$end (0) 0
error (256)
lex_KW_INT (258)
lex_KW_CHAR (259)
lex_KW_IF (260)
lex_KW_ELSE (261)
lex_KW_WHILE (262)
lex_KW_RETURN (263)
lex_PLUS (264) 11 13
lex_MINUS (265) 12 14
lex_STAR (266) 7
lex_SLASH (267) 8
lex_PERCENT (268) 9
lex_AND (269)
lex_EQ (270)
lex_EQEQ (271) 20
lex_NE (272) 21
lex_LT (273) 16
lex_GT (274) 17
lex_LE (275) 18
lex_GE (276) 19
lex_COMMA (277)
lex_SEMICOLON (278)
lex_LPAREN (279)
lex_RPAREN (280)
lex_LBRACE (281)
lex_RBRACE (282)
lex_LBRACK (283)
lex_RBRACK (284)
lex_INT (285) 2
lex_CHAR (286) 3
lex_ID (287) 5


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
expression4 (35)
    on left: 2 3 4, on right: 6 7 8 9
exp_variable (36)
    on left: 5, on right: 4
expression3 (37)
    on left: 6 7 8 9, on right: 7 8 9 10 11 12 13 14
expression2 (38)
    on left: 10 11 12 13 14, on right: 13 14 15 16 17 18 19 20 21
expression (39)
    on left: 15 16 17 18 19 20 21, on right: 1 16 17 18 19 20 21


state 0

    0 $accept: . program $end

    lex_PLUS   shift, and go to state 1
    lex_MINUS  shift, and go to state 2
    lex_INT    shift, and go to state 3
    lex_CHAR   shift, and go to state 4
    lex_ID     shift, and go to state 5

    program       go to state 6
    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 9
    expression2   go to state 10
    expression    go to state 11


state 1

   11 expression2: lex_PLUS . expression3

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 12


state 2

   12 expression2: lex_MINUS . expression3

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 13


state 3

    2 expression4: lex_INT .

    $default  reduce using rule 2 (expression4)


state 4

    3 expression4: lex_CHAR .

    $default  reduce using rule 3 (expression4)


state 5

    5 exp_variable: lex_ID .

    $default  reduce using rule 5 (exp_variable)


state 6

    0 $accept: program . $end

    $end  shift, and go to state 14


state 7

    6 expression3: expression4 .

    $default  reduce using rule 6 (expression3)


state 8

    4 expression4: exp_variable .

    $default  reduce using rule 4 (expression4)


state 9

    7 expression3: expression3 . lex_STAR expression4
    8            | expression3 . lex_SLASH expression4
    9            | expression3 . lex_PERCENT expression4
   10 expression2: expression3 .

    lex_STAR     shift, and go to state 15
    lex_SLASH    shift, and go to state 16
    lex_PERCENT  shift, and go to state 17

    $default  reduce using rule 10 (expression2)


state 10

   13 expression2: expression2 . lex_PLUS expression3
   14            | expression2 . lex_MINUS expression3
   15 expression: expression2 .

    lex_PLUS   shift, and go to state 18
    lex_MINUS  shift, and go to state 19

    $default  reduce using rule 15 (expression)


state 11

    1 program: expression .
   16 expression: expression . lex_LT expression2
   17           | expression . lex_GT expression2
   18           | expression . lex_LE expression2
   19           | expression . lex_GE expression2
   20           | expression . lex_EQEQ expression2
   21           | expression . lex_NE expression2

    lex_EQEQ  shift, and go to state 20
    lex_NE    shift, and go to state 21
    lex_LT    shift, and go to state 22
    lex_GT    shift, and go to state 23
    lex_LE    shift, and go to state 24
    lex_GE    shift, and go to state 25

    $default  reduce using rule 1 (program)


state 12

    7 expression3: expression3 . lex_STAR expression4
    8            | expression3 . lex_SLASH expression4
    9            | expression3 . lex_PERCENT expression4
   11 expression2: lex_PLUS expression3 .

    lex_STAR     shift, and go to state 15
    lex_SLASH    shift, and go to state 16
    lex_PERCENT  shift, and go to state 17

    $default  reduce using rule 11 (expression2)


state 13

    7 expression3: expression3 . lex_STAR expression4
    8            | expression3 . lex_SLASH expression4
    9            | expression3 . lex_PERCENT expression4
   12 expression2: lex_MINUS expression3 .

    lex_STAR     shift, and go to state 15
    lex_SLASH    shift, and go to state 16
    lex_PERCENT  shift, and go to state 17

    $default  reduce using rule 12 (expression2)


state 14

    0 $accept: program $end .

    $default  accept


state 15

    7 expression3: expression3 lex_STAR . expression4

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 26
    exp_variable  go to state 8


state 16

    8 expression3: expression3 lex_SLASH . expression4

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 27
    exp_variable  go to state 8


state 17

    9 expression3: expression3 lex_PERCENT . expression4

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 28
    exp_variable  go to state 8


state 18

   13 expression2: expression2 lex_PLUS . expression3

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 29


state 19

   14 expression2: expression2 lex_MINUS . expression3

    lex_INT   shift, and go to state 3
    lex_CHAR  shift, and go to state 4
    lex_ID    shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 30


state 20

   20 expression: expression lex_EQEQ . expression2

    lex_PLUS   shift, and go to state 1
    lex_MINUS  shift, and go to state 2
    lex_INT    shift, and go to state 3
    lex_CHAR   shift, and go to state 4
    lex_ID     shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 9
    expression2   go to state 31


state 21

   21 expression: expression lex_NE . expression2

    lex_PLUS   shift, and go to state 1
    lex_MINUS  shift, and go to state 2
    lex_INT    shift, and go to state 3
    lex_CHAR   shift, and go to state 4
    lex_ID     shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 9
    expression2   go to state 32


state 22

   16 expression: expression lex_LT . expression2

    lex_PLUS   shift, and go to state 1
    lex_MINUS  shift, and go to state 2
    lex_INT    shift, and go to state 3
    lex_CHAR   shift, and go to state 4
    lex_ID     shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 9
    expression2   go to state 33


state 23

   17 expression: expression lex_GT . expression2

    lex_PLUS   shift, and go to state 1
    lex_MINUS  shift, and go to state 2
    lex_INT    shift, and go to state 3
    lex_CHAR   shift, and go to state 4
    lex_ID     shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 9
    expression2   go to state 34


state 24

   18 expression: expression lex_LE . expression2

    lex_PLUS   shift, and go to state 1
    lex_MINUS  shift, and go to state 2
    lex_INT    shift, and go to state 3
    lex_CHAR   shift, and go to state 4
    lex_ID     shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 9
    expression2   go to state 35


state 25

   19 expression: expression lex_GE . expression2

    lex_PLUS   shift, and go to state 1
    lex_MINUS  shift, and go to state 2
    lex_INT    shift, and go to state 3
    lex_CHAR   shift, and go to state 4
    lex_ID     shift, and go to state 5

    expression4   go to state 7
    exp_variable  go to state 8
    expression3   go to state 9
    expression2   go to state 36


state 26

    7 expression3: expression3 lex_STAR expression4 .

    $default  reduce using rule 7 (expression3)


state 27

    8 expression3: expression3 lex_SLASH expression4 .

    $default  reduce using rule 8 (expression3)


state 28

    9 expression3: expression3 lex_PERCENT expression4 .

    $default  reduce using rule 9 (expression3)


state 29

    7 expression3: expression3 . lex_STAR expression4
    8            | expression3 . lex_SLASH expression4
    9            | expression3 . lex_PERCENT expression4
   13 expression2: expression2 lex_PLUS expression3 .

    lex_STAR     shift, and go to state 15
    lex_SLASH    shift, and go to state 16
    lex_PERCENT  shift, and go to state 17

    $default  reduce using rule 13 (expression2)


state 30

    7 expression3: expression3 . lex_STAR expression4
    8            | expression3 . lex_SLASH expression4
    9            | expression3 . lex_PERCENT expression4
   14 expression2: expression2 lex_MINUS expression3 .

    lex_STAR     shift, and go to state 15
    lex_SLASH    shift, and go to state 16
    lex_PERCENT  shift, and go to state 17

    $default  reduce using rule 14 (expression2)


state 31

   13 expression2: expression2 . lex_PLUS expression3
   14            | expression2 . lex_MINUS expression3
   20 expression: expression lex_EQEQ expression2 .

    lex_PLUS   shift, and go to state 18
    lex_MINUS  shift, and go to state 19

    $default  reduce using rule 20 (expression)


state 32

   13 expression2: expression2 . lex_PLUS expression3
   14            | expression2 . lex_MINUS expression3
   21 expression: expression lex_NE expression2 .

    lex_PLUS   shift, and go to state 18
    lex_MINUS  shift, and go to state 19

    $default  reduce using rule 21 (expression)


state 33

   13 expression2: expression2 . lex_PLUS expression3
   14            | expression2 . lex_MINUS expression3
   16 expression: expression lex_LT expression2 .

    lex_PLUS   shift, and go to state 18
    lex_MINUS  shift, and go to state 19

    $default  reduce using rule 16 (expression)


state 34

   13 expression2: expression2 . lex_PLUS expression3
   14            | expression2 . lex_MINUS expression3
   17 expression: expression lex_GT expression2 .

    lex_PLUS   shift, and go to state 18
    lex_MINUS  shift, and go to state 19

    $default  reduce using rule 17 (expression)


state 35

   13 expression2: expression2 . lex_PLUS expression3
   14            | expression2 . lex_MINUS expression3
   18 expression: expression lex_LE expression2 .

    lex_PLUS   shift, and go to state 18
    lex_MINUS  shift, and go to state 19

    $default  reduce using rule 18 (expression)


state 36

   13 expression2: expression2 . lex_PLUS expression3
   14            | expression2 . lex_MINUS expression3
   19 expression: expression lex_GE expression2 .

    lex_PLUS   shift, and go to state 18
    lex_MINUS  shift, and go to state 19

    $default  reduce using rule 19 (expression)
