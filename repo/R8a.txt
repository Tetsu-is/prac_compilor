##コンパイラ実習 37022497 石本哲郎
##日付 11/14

##課題 1

#課題内容
整数定数の定義

#結果
2004

#感想
yaccの文法が特殊だったので難しかった。

##課題 2

#課題内容
文字定数

#結果
'x'

#感想
|をつかって「または」の意味を表現できることがわかりました。


##課題 3

#課題内容
変数

#結果
./mci t803.mc                                                                                                                                                                                       756ms  2024-11-14 16:13
xyz
-------------
./mci t801.mc                                                                                                                                                                                       293ms  2024-11-14 16:13
2004
-------------
./mci t802.mc                                                                                                                                                                                               2024-11-14 16:15
'x'

#感想
変数はidentifierとして定義されていることがわかった。

##課題 4
乗算

#課題内容
2つオペランドを取る乗算演算子を読み込めるようにする。

#結果
./mci t804.mc                                                                                                                                                                                       927ms  2024-11-14 16:26
((123 * x) * 2)

#感想
Exp_operation2を修正する必要があったが括弧をつけるだけなので簡単だった。

##課題 5

#課題内容
除算と剰余算

#結果
(((23 * x) / 45) % c)

#感想
乗算と同じように修正すればよいので簡単だった。

##課題 6

#課題内容
単項演算

#結果
(+((81 / a) * 23))

#感想
単項演算は2項演算と同様にすればよいので簡単だった。

##課題 7

#課題内容
単項演算でマイナスを扱えるようにする

#結果
(-(123 * x))

#感想
簡単だった。


##課題 8

#課題内容
加減算

#結果
(((-123) + (a * 48)) - (9 / xy))

#感想
簡単だった。


##課題 9
比較演算子

#課題内容
比較演算


#結果
(((((((-(23 * a)) == b) != (2 + 9)) < x) > y) <= z) >= (-2))

#感想
lex.hのトークンを登録していくだけだったので簡単だった。

##課題 10

#課題内容
括弧付きの式

#結果
((10 - ((x + y) * 8)) > (a / (-2)))

#感想
(式)を式4に追加するだけなので簡単だった。


##課題 11

#課題内容
関数呼び出し

#結果
((asum(15, (a + 3)) * 9) == 5)

#感想
トークンのunionに型を登録するのを忘れて苦戦した。

