##コンパイラ実習 37022497 石本哲郎
##日付 10/10

##課題 5.8

#課題内容
St_if を実装せよ

#結果
if (i < 0) {
  s = s - i;
}
else {
  s = s + i;
}

#感想
クラスの継承先で親クラスを満たすかを考えるのが難しかった。

##課題 5.9

#課題内容
St_whileの実装

#結果
while (i <= n) {
  if (i < 0) {
    s = s - i;
  }
  else {
    s = s + i;
  }
  s = s + i;

}

#感想
St_listのインデントが一つ余計になっていたが、
入れ子構造になっていて特定するのに時間がかかり苦戦した。

##課題 5.10

#課題内容
St_return を実装せよ.

#結果
return s;

#感想
メンバ変数が少なくシンプルだったので簡単だった。

##課題 5.11

#課題内容
St_function を実装せよ.

#結果
putint(a);

#感想
Exp_functionを内包させることで共通処理を重複させることなく
実装できることが学べた。

##課題 5.12

#課題内容
Variable を実装せよ.

#結果
int a

#感想
typeはenumで管理して出力する時のみType_stringで変換することで
プログラム上で扱いやすくしながらプリントも簡単にできることがわかった。

##課題 5.13

#課題内容
Functionを実装せよ

#結果
int asum(int n)
{
  int s;
  int i;

  s = 0;
  i = (-n);
  while (i <= n) {
    if (i < 0) {
      s = s - i;
    }
    else {
      s = s + i;
    }
    s = s + i;
  }
  return s;
}

#感想
St_listの中で改行を余計に入れてしまっていることに気づくのに苦戦した。

##課題 5.14

#課題内容
Programを実装せよ

#結果
int g

int asum(int n)
{
  int s;
  int i;
  s = 0;
  i = (-n);
  while (i <= n) {
    if (i < 0) {
      s = s - i;
    }
    else {
      s = s + i;
    }
    s = s + i;
  }
  return s;
}

int main()
{
  int a;
  g = 3;
  a = asum(g);
  putint(a);
}


#感想
asum関数では変数宣言とbodyの間に空行があったが
main関数ではなかったので自分の間違いなのか問題の間違いなのかがわからなかった。
main関数も他関数と同じくFunction classを持ちいてprintしているので一旦そろえておいた。

##課題 5.15

#課題内容
factor.cppで期待された動作が行われるか確認する

#結果
期待する出力が得られた。

#感想
make_if()等をast.cpp内に定義していて、重複によるコンパイルエラーが発生したので焦ったが
ast.hに関数の宣言を書いておいて実行するmain関数があるファイルで実装することで解決した。
出力が期待通りだったので問題ないと思う。

